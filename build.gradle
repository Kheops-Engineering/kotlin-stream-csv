plugins {
    id 'org.jetbrains.kotlin.jvm' version "$kotlin_version" apply false

    id "org.jlleitschuh.gradle.ktlint" version "$ktlint_version"
    id "org.jlleitschuh.gradle.ktlint-idea" version "$ktlint_version"

    id 'com.github.kt3k.coveralls' version "$coveralls_version"
    id 'net.researchgate.release' version "$researchgate_release_version" apply false
    id "io.codearte.nexus-staging" version "$nexus_staging_version"
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'

    group "io.github.pelletier197"

    sourceCompatibility = 11
    targetCompatibility = 11

    repositories {
        mavenCentral()
    }

    test {
        useJUnitPlatform()
        testLogging {
            showStandardStreams = true
            events "standardOut", "passed", "skipped", "failed"
        }
        finalizedBy jacocoTestReport
    }
}

jacoco {
    toolVersion = "0.8.7"
}

task jacocoRootReport(type: JacocoReport, group: 'Coverage reports') {
    executionData.setFrom(files(executionData.findAll { it.exists() }))

    description = 'Generates an aggregate report from all subprojects'

    def coverageProjects = [project(':core'), project(':core-java-tests')]
    additionalSourceDirs.setFrom(files(coverageProjects.sourceSets.main.allSource.srcDirs))
    sourceDirectories.setFrom(files(coverageProjects.sourceSets.main.allSource.srcDirs))
    classDirectories.setFrom(files(coverageProjects.sourceSets.main.output))
    executionData.setFrom(files(coverageProjects.jacocoTestReport.executionData))

    reports {
        html {
            enabled true
        }
        xml {
            enabled true
        }
    }
}

coveralls {
    sourceDirs = ["${project(":core").projectDir}/src/main/kotlin"]
    service = "circleci"
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
}

tasks.coveralls {
    description = "Uploads coverage report to coveralls"
    dependsOn jacocoRootReport
}

nexusStaging {
    username System.getenv("SONATYPE_NEXUS_USERNAME")
    password System.getenv("SONATYPE_NEXUS_PASSWORD")
}
