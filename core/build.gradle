import java.util.regex.Matcher

plugins {
    id 'org.jetbrains.kotlin.jvm'
    id "org.jlleitschuh.gradle.ktlint"

    id 'net.researchgate.release'
    id 'maven-publish'
    id 'signing'
}

release {
    tagTemplate = '$name-$version'
    buildTasks = ['assemble']
    versionPatterns = [
            /(\d+)(.\d+[^\d]*$)/: { Matcher m, Project p -> m.replaceAll("${(m[0][1] as int) + 1}${m[0][2]}") }
    ]
    git {
        requireBranch = '^release-.*$'
    }
}


compileKotlin {
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "org.jetbrains.kotlin:kotlin-reflect"

    testImplementation "io.kotest:kotest-runner-junit5:$kotest_version"
    testImplementation "io.kotest:kotest-assertions-core:$kotest_version"
    testImplementation "io.mockk:mockk:$mockk_version"
}

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId 'csv-core'

            from components.java

            pom {
                name = 'Kotlin stream CSV core'
                description = 'A kotlin and java CSV parser that uses the power of kotlin DSL to simplify parsing and error handling compared to existing solutions'
                url = 'https://github.com/pelletier197/kotlin-stream-csv'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'pelletier197'
                        name = 'Sunny Pelletier'
                        email = 'sunnypelletier01@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/pelletier197/kotlin-stream-csv.git'
                    developerConnection = 'scm:git:git@github.com:pelletier197/kotlin-stream-csv.git'
                    url = 'https://github.com/pelletier197/'
                }
            }


            artifact(sourceJar) {
                classifier = 'sources'
            }
            artifact(javadocJar) {
                classifier = 'javadoc'
            }
        }
    }
    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"

            credentials {
                username System.getenv("SONATYPE_NEXUS_USERNAME")
                password System.getenv("SONATYPE_NEXUS_PASSWORD")
            }
        }
    }
}

signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}